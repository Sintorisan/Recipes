@inject NavigationManager nav

@if(Recipe != null)
{    
<li @onclick="ToggleExpand" class="toggle-item">
    <div class="toggle-content @(isExpanded ? "expanded" : "collapsed")" style="background-image:url(@Recipe.ImageUrl)">
        @if (isExpanded)
        {
            <div class="expanded-content">
                <small class="badge">@Recipe.MealTag</small>
                <div class="description">
                    <div class="title">
                        <p class="title">
                            <strong>@Recipe.Name</strong>
                            @Recipe.Description
                        </p>
                    </div>
                    <p class="card-footer">
                        @TotalTime(Recipe.TotalTime);
                    </p>
                    <button @onclick="() => GoToRecipe(Recipe.Id)">To Recipe</button>
                </div>
            </div>
        }
        else
        {
            <small class="badge">@Recipe.MealTag</small>
            <strong>@Recipe.Name</strong>
        }
    </div>
</li>
}

@code {
    [Parameter]
    public Recipe? Recipe { get; set; }

    private bool isExpanded = false;

    private void ToggleExpand()
    {
        isExpanded = !isExpanded;
    }

    public void GoToRecipe(Guid id)
    {
        nav.NavigateTo($"/recipe/{id}");
    }

    public string TotalTime(int totalMinutes)
    {
        if (totalMinutes > 59)
        {
            int hours = totalMinutes / 60;
            int minutes = totalMinutes % 60;

            return $"{hours} hours : {minutes:D2} minutes";   
        }
        return $"{totalMinutes} minutes";
    }
}
